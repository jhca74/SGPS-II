import cv2import face_recognitionimport osimport numpy as np# Caminho onde ficas com imagens da tua famÃ­lia (ex: "familia/jorge.jpg")PASTA_REFERENCIAS = "core/imagens_familia"# Carregar rostos conhecidosdef carregar_referencias():    rostos_codificados = []    nomes = []    for ficheiro in os.listdir(PASTA_REFERENCIAS):        if ficheiro.endswith(".jpg") or ficheiro.endswith(".png"):            imagem = face_recognition.load_image_file(os.path.join(PASTA_REFERENCIAS, ficheiro))            codificacao = face_recognition.face_encodings(imagem)            if codificacao:                rostos_codificados.append(codificacao[0])                nomes.append(os.path.splitext(ficheiro)[0])    return rostos_codificados, nomes# Ativar a cÃ¢mara e reconhecer rostosdef iniciar_visao():    rostos_conhecidos, nomes_conhecidos = carregar_referencias()    video = cv2.VideoCapture(0)    print("[Sara] VisÃ£o ativada. A observar...")    while True:        ret, frame = video.read()        if not ret:            continue        # Reduzir tamanho para velocidade        pequeno_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)        rgb_frame = cv2.cvtColor(pequeno_frame, cv2.COLOR_BGR2RGB)        rostos_encontrados = face_recognition.face_locations(rgb_frame)        codigos_rostos = face_recognition.face_encodings(rgb_frame, rostos_encontrados)        for codigo in codigos_rostos:            resultados = face_recognition.compare_faces(rostos_conhecidos, codigo)            nome = "Desconhecido"            if True in resultados:                index = resultados.index(True)                nome = nomes_conhecidos[index]            print(f"[Sara] Viu: {nome}")        # Tecla Q para sair        if cv2.waitKey(1) & 0xFF == ord('q'):            break    video.release()    cv2.destroyAllWindows()if __name__ == "__main__":    iniciar_visao()