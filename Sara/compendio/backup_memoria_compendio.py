import osimport shutilimport jsonfrom datetime import datetimeimport chromadbfrom chromadb.utils.embedding_functions import SentenceTransformerEmbeddingFunction# CaminhosBASE_DIR = os.path.dirname(os.path.abspath(__file__))BACKUP_DIR = os.path.join(BASE_DIR, "compendio_backups")LOG_FILE = os.path.join(BASE_DIR, "logs", "compendio_backup_log.txt")# Criar pastas se nÃ£o existiremos.makedirs(BACKUP_DIR, exist_ok=True)os.makedirs(os.path.join(BASE_DIR, "logs"), exist_ok=True)# Inicializa ChromaDBclient = chromadb.Client()embedding_func = SentenceTransformerEmbeddingFunction(model_name="all-MiniLM-L6-v2")colecao = client.get_or_create_collection(name="sara_memoria", embedding_function=embedding_func)# Obter todos os dadosdados = colecao.get(include=["documents", "metadatas", "ids"])# Guardar ficheiro com timestamptimestamp = datetime.now().strftime("%Y%m%d_%H%M%S")backup_path = os.path.join(BACKUP_DIR, f"compendio_backup_{timestamp}.json")with open(backup_path, "w", encoding="utf-8") as f:    json.dump(dados, f, indent=2, ensure_ascii=False)# Registo em logwith open(LOG_FILE, "a", encoding="utf-8") as log:    log.write(f"[{timestamp}] Backup guardado: {backup_path}\n")# Roda backups (mÃ¡ximo 10)todos = sorted(Path(BACKUP_DIR).glob("compendio_backup_*.json"), key=os.path.getmtime, reverse=True)for velho in todos[10:]:    os.remove(velho)