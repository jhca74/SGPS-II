import jsonimport osfrom datetime import datetimeclass AprendizagemFeedback:    def __init__(self, log_path='data/logs/feedback_logs.json'):        self.log_path = log_path        self.feedback_data = {            "padroes": {                "erro": [],                "elogio": [],                "sugestao": [],                "comando": []            },            "estado_emocional": "neutro"        }        self._carregar_logs()    def _carregar_logs(self):        if os.path.exists(self.log_path):            with open(self.log_path, 'r', encoding='utf-8') as f:                try:                    self.feedback_data = json.load(f)                except json.JSONDecodeError:                    pass    def _guardar_logs(self):        os.makedirs(os.path.dirname(self.log_path), exist_ok=True)        with open(self.log_path, 'w', encoding='utf-8') as f:            json.dump(self.feedback_data, f, ensure_ascii=False, indent=2)    def registar_feedback(self, tipo, mensagem, origem="interno"):        timestamp = datetime.now().isoformat()        if tipo not in self.feedback_data["padroes"]:            self.feedback_data["padroes"][tipo] = []        entrada = {            "mensagem": mensagem,            "timestamp": timestamp,            "origem": origem        }        self.feedback_data["padroes"][tipo].append(entrada)        print(f"[Feedback] Registado: [{tipo.upper()}] {mensagem} ({origem})")        self._guardar_logs()    def obter_estado_emocional(self):        return self.feedback_data.get("estado_emocional", "neutro")    def atualizar_estado_emocional(self, estado):        self.feedback_data["estado_emocional"] = estado        print(f"[Feedback] Estado emocional atualizado para: {estado}")        self._guardar_logs()        from sara_aprendizagem_module import registar_feedback    def processar_com_feedback(pergunta):         resposta = "SimulaÃ§Ã£o de resposta automÃ¡tica."  # futuramente pode vir de LangChain    print(f"Sara: {resposta}")        # Em ambiente real, feedback viria do UI ou API    feedback = input("Feedback (ðŸ‘/ðŸ‘Ž): ")        registar_feedback(pergunta, resposta, feedback)    return respostaif __name__ == "__main__":    af = AprendizagemFeedback()    af.registar_feedback("elogio", "Muito bem respondido!")    af.registar_feedback("erro", "Resposta incompleta.")    af.registar_feedback("sugestao", "Fala mais devagar, por favor.")    af.registar_feedback("comando", "Reinicia o sistema.")    print("Estado emocional atual:", af.obter_estado_emocional())