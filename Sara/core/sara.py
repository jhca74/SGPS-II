import timeimport threadingfrom core.autoajuste_cognitivo import AutoAjusteCognitivofrom core.feedback_aprendizagem import FeedbackAprendizagemfrom core.ajuste_emocional import AjusteEmocionalfrom core.monitor_scraping import iniciar_scrapingfrom core.memoria.memoria_central import atualizar_memoriafrom voz.voz_sara import VozSarafrom core.visao_sara import iniciar_visaoclass Sara:    def __init__(self):        self.estado_ativo = True        self.autoajuste = AutoAjusteCognitivo()        self.feedback = FeedbackAprendizagem()        self.emocional = AjusteEmocional()        self.voz = VozSara()        self.memoria = {}        self.visao_ativa = False    def iniciar(self):        print("[SARA] A iniciar sistema cognitivo.")        self.voz.falar("OlÃ¡, estou pronta para comeÃ§ar.")        threading.Thread(target=self.loop_principal, daemon=True).start()    def processar_input(self, texto):        print(f"[SARA] Input recebido: {texto}")        self.autoajuste.registar_interacao(texto)        emocao = self.emocional.analisar_emocao(texto)        resposta = self.gerar_resposta(texto, emocao)        self.feedback.registar_feedback(texto, resposta)        atualizar_memoria(texto, resposta)        self.voz.falar(resposta)    def gerar_resposta(self, texto, emocao):        resposta_base = f"Recebi a tua pergunta: '{texto}'."        if emocao == "raiva":            return f"{resposta_base} Calma, vamos resolver isto juntos."        elif emocao == "alegria":            return f"{resposta_base} Fico feliz por isso!"        elif emocao == "tristeza":            return f"{resposta_base} Lamento ouvir isso. Queres falar sobre isso?"        return resposta_base    def loop_principal(self):        while self.estado_ativo:            print("[SARA] VerificaÃ§Ã£o de estado...")            if not self.visao_ativa:                print("[SARA] Ativando visÃ£o.")                self.visao_ativa = True                threading.Thread(target=iniciar_visao, daemon=True).start()            print("[SARA] A monitorizar scraping.")            iniciar_scraping()            time.sleep(30)  # Intervalo de verificaÃ§Ã£o e atualizaÃ§Ã£o    def parar(self):        print("[SARA] A encerrar sistema.")        self.estado_ativo = Falseif __name__ == "__main__":    sara = Sara()    sara.iniciar()    while True:        try:            entrada = input("Tu: ")            sara.processar_input(entrada)        except KeyboardInterrupt:            sara.parar()            break