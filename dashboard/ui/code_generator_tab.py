from PyQt5.QtWidgets import QWidget, QVBoxLayout, QLabel, QTextEdit, QLineEdit, QPushButtonfrom PyQt5.QtGui import QFontimport requestsimport osclass CodeGeneratorTab(QWidget):    def __init__(self):        super().__init__()        layout = QVBoxLayout()        titulo = QLabel("Gerador de CÃ³digo com IA")        titulo.setFont(QFont("Arial", 14, QFont.Bold))        layout.addWidget(titulo)        self.input_instrucao = QTextEdit()        self.input_instrucao.setPlaceholderText("Ex: Cria uma calculadora em Python com interface grÃ¡fica")        layout.addWidget(QLabel("InstruÃ§Ã£o"))        layout.addWidget(self.input_instrucao)        self.input_linguagem = QLineEdit()        self.input_linguagem.setPlaceholderText("Ex: Python, JavaScript...")        layout.addWidget(QLabel("Linguagem"))        layout.addWidget(self.input_linguagem)        self.input_tema = QLineEdit()        self.input_tema.setPlaceholderText("Tema opcional (ex: educativo, dark mode...)")        layout.addWidget(QLabel("Tema"))        layout.addWidget(self.input_tema)        self.output_codigo = QTextEdit()        self.output_codigo.setReadOnly(True)        layout.addWidget(QLabel("CÃ³digo Gerado"))        layout.addWidget(self.output_codigo)        btn_gerar = QPushButton("ðŸš€ Gerar CÃ³digo")        btn_gerar.clicked.connect(self._chamar_gerador_codigo)        layout.addWidget(btn_gerar)        abrir_btn = QPushButton("Abrir Interface Gerador")        abrir_btn.clicked.connect(lambda: os.system("start http://localhost:3000"))        layout.addWidget(abrir_btn)        iniciar_btn = QPushButton("Iniciar Backend FastAPI")        iniciar_btn.clicked.connect(lambda: os.system('start cmd /k "cd backend/app/api && uvicorn main:app --reload"'))        layout.addWidget(iniciar_btn)        self.setLayout(layout)    def _chamar_gerador_codigo(self):        instrucao = self.input_instrucao.toPlainText().strip()        linguagem = self.input_linguagem.text().strip()        tema = self.input_tema.text().strip()        if not instrucao or not linguagem:            self.output_codigo.setText("âš ï¸ InstruÃ§Ã£o e linguagem sÃ£o obrigatÃ³rias.")            return        try:            resp = requests.post("http://localhost:8000/gerar_codigo", json={                "instrucao": instrucao,                "linguagem": linguagem,                "tema": tema            })            self.output_codigo.setText(resp.json().get("codigo", "âš ï¸ Resposta vazia da IA."))        except Exception as e:            self.output_codigo.setText(f"âŒ Erro: {str(e)}")