import sysimport ossys.path.append(os.path.abspath(os.path.dirname(__file__)))from PyQt5.QtWidgets import QMainWindow, QTabWidget, QApplicationfrom menus.diagnostics.diagnostico_dashboard.diagnostico_armazenamento import DiagnosticoArmazenamentoWidgetfrom menus.diagnostics.diagnostico_dashboard.diagnostico_widget import DiagnosticoWidgetclass MainDashboard(QMainWindow):    def __init__(self):        super().__init__()        self.setWindowTitle("Dashboard TÃ©cnico - JHCA")        self.setGeometry(100, 100, 1100, 700)        self._setup_tabs()    def _setup_tabs(self):        self.tabs = QTabWidget()        self.setCentralWidget(self.tabs)        # Abas com funcionalidades operacionais        self.tabs.addTab(DiagnosticoArmazenamentoWidget(), "Armazenamento")        self.tabs.addTab(DiagnosticoWidget(), "UtilitÃ¡rios")        # Futuras abas (ex: RAM, Sistema, BIOS, etc.) serÃ£o integradas quando os dados estiverem prontosif __name__ == "__main__":    app = QApplication([])    window = MainDashboard()    window.show()    app.exec()