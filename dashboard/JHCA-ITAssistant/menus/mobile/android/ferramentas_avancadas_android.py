# === Submenu: Ferramentas AvanÃ§adas Android ===# === Submenu: Ferramentas AvanÃ§adas Android (Superadmin) ===from datetime import datetimefrom PyQt5.QtWidgets import QMessageBoxfrom modules.email_sender import send_email_reportimport jsonfrom pathlib import Pathdef ferramentas_avancadas_android(self):    self.result_text.clear()    self.result_text.append("ðŸ§¬ Ferramentas AvanÃ§adas Android (Superadmin Only)")    try:        self.result_text.append("âš ï¸ Esta Ã¡rea Ã© destinada a utilizadores com permissÃµes avanÃ§adas.")        self.result_text.append("Nenhuma aÃ§Ã£o direta Ã© executada sem autorizaÃ§Ã£o explÃ­cita.\n")        sugestoes = [            "ðŸ§° Magisk: GestÃ£o de permissÃµes root, instalaÃ§Ã£o de mÃ³dulos.",            "ðŸ§° TWRP Recovery: Flash e recuperaÃ§Ã£o de partiÃ§Ãµes do sistema.",            "ðŸ§° SP Flash Tool: Flash de firmware para dispositivos MediaTek.",            "ðŸ§° MTKClient: Acesso Ã  memÃ³ria flash para MTK (leitura/escrita).",            "ðŸ§° QFIL (Qualcomm): Flash via EDL (requer firehose loader).",            "ðŸ§° Heimdall: Alternativa open-source ao Odin (Samsung).",            "ðŸ§° Checkm8 / Checkra1n: Acesso profundo em iPhones vulnerÃ¡veis.",            "ðŸ§° Frida / Drozer: AnÃ¡lise dinÃ¢mica e desbloqueio de apps.",            "ðŸ§° Pitch Black Recovery: Fork do TWRP com melhorias visuais e estabilidade.",            "ðŸ§° LineageOS Manager: GestÃ£o de ROMs customizadas."        ]        self.result_text.append("ðŸ’¡ Ferramentas sugeridas para acesso avanÃ§ado:")        for s in sugestoes:            self.result_text.append(s)        # Exportar        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")        relatorio_path = f"ferramentas_avancadas_android_{now}.txt"        with open(relatorio_path, "w", encoding="utf-8") as f:            f.write(self.result_text.toPlainText())        send_email_report(            assunto="Ferramentas AvanÃ§adas Android",            corpo="Segue o relatÃ³rio com ferramentas recomendadas para operaÃ§Ãµes avanÃ§adas.",            anexo_path=relatorio_path        )        self.result_text.append("ðŸ“¤ RelatÃ³rio enviado por email com sucesso!")        # Metadata        metadata = {            "submodulo": "ferramentas_avancadas_android",            "status": "executado",            "sugestoes_avancadas": sugestoes        }        Path("txt").mkdir(parents=True, exist_ok=True)        with open("txt/ferramentas_avancadas_metadata.json", "w", encoding="utf-8") as f:            json.dump(metadata, f, indent=4)    except Exception as e:        QMessageBox.warning(None, "Erro", f"Falha ao gerar conteÃºdo: {e}")        self.result_text.append(f"âŒ Erro: {e}")