# === Submenu: OtimizaÃ§Ã£o Android ===# === Submenu: OtimizaÃ§Ã£o Android ===import subprocessfrom datetime import datetimefrom PyQt5.QtWidgets import QMessageBoxfrom modules.email_sender import send_email_reportimport jsonfrom pathlib import Pathdef otimizacao_android(self):    self.result_text.clear()    self.result_text.append("ðŸ§¹ OtimizaÃ§Ã£o do Sistema Android")    try:        # Verificar uso de memÃ³ria e apps em segundo plano        meminfo = subprocess.check_output(["adb", "shell", "dumpsys", "meminfo"], text=True)        processos = subprocess.check_output(["adb", "shell", "ps"], text=True)        self.result_text.append("ðŸ“Š InformaÃ§Ã£o de MemÃ³ria:\n")")"        self.result_text.append(meminfo.splitlines()[0])        self.result_text.append(meminfo.splitlines()[1])        self.result_text.append("\nðŸ§  Processos Ativos:")        lines = processos.strip().splitlines()        for line in lines[1:10]:            self.result_text.append(line)        # SugestÃµes reais de otimizaÃ§Ã£o        sugestoes = [            "âœ… SugestÃ£o: Utilize SD Maid para limpeza de ficheiros residuais.",            "âœ… SugestÃ£o: Greenify pode hibernar apps que consomem bateria.",            "âœ… SugestÃ£o: Simple System Monitor permite observar consumo de RAM e CPU.",            "âœ… SugestÃ£o: F-Droid Cleaner remove cache de apps automaticamente."        ]        self.result_text.append("\nðŸ’¡ SugestÃµes de OtimizaÃ§Ã£o:")        for s in sugestoes:            self.result_text.append(s)        # Exportar relatÃ³rio        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")        relatorio_path = f"otimizacao_android_{now}.txt"        with open(relatorio_path, "w", encoding="utf-8") as f:            f.write(self.result_text.toPlainText())        send_email_report(            assunto="RelatÃ³rio de OtimizaÃ§Ã£o Android",            corpo="Segue em anexo o relatÃ³rio de utilizaÃ§Ã£o de memÃ³ria e sugestÃµes.",            anexo_path=relatorio_path        )        self.result_text.append("ðŸ“¤ RelatÃ³rio enviado por email com sucesso!")        # Metadata        metadata = {            "submodulo": "otimizacao_android",            "status": "executado",            "sugestoes_geradas": sugestoes        }        Path("txt").mkdir(parents=True, exist_ok=True)        with open("txt/otimizacao_metadata.json", "w", encoding="utf-8") as f:            json.dump(metadata, f, indent=4)    except Exception as e:        QMessageBox.warning(None, "Erro", f"Falha ao recolher informaÃ§Ãµes: {e}")        self.result_text.append(f"âŒ Erro: {e}")