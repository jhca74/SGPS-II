from PyQt5.QtWidgets import QWidget, QVBoxLayout, QLabel, QTableWidget, QTableWidgetItem, QPushButton, QHBoxLayout, QComboBoxfrom PyQt5.QtGui import QFontfrom PyQt5.QtCore import Qtfrom modules.database import DatabaseManagerimport sqlite3import osimport requestsclass CompendiumTab(QWidget):    def __init__(self):        super().__init__()        layout = QVBoxLayout()        titulo = QLabel("CompÃªndio Central de MemÃ³ria IA")        titulo.setFont(QFont("Arial", 14, QFont.Bold))        layout.addWidget(titulo)        filtro_layout = QHBoxLayout()        filtro_label = QLabel("Filtrar por tipo:")        self.combo_filtro = QComboBox()        self.combo_filtro.addItems(["Todos", "codigo", "scraping", "brainstorm", "geral", "telegram", "nuvem", "memoria", "software"])        self.combo_filtro.currentIndexChanged.connect(self._carregar_compendio)        filtro_layout.addWidget(filtro_label)        filtro_layout.addWidget(self.combo_filtro)        layout.addLayout(filtro_layout)        self.tabela_compendio = QTableWidget()        self.tabela_compendio.setColumnCount(5)        self.tabela_compendio.setHorizontalHeaderLabels(["Data", "Origem", "Tipo", "Pergunta", "Resposta"])        self.tabela_compendio.setColumnWidth(0, 130)        self.tabela_compendio.setColumnWidth(1, 100)        self.tabela_compendio.setColumnWidth(2, 80)        self.tabela_compendio.setColumnWidth(3, 250)        self.tabela_compendio.setColumnWidth(4, 400)        layout.addWidget(self.tabela_compendio)        btn_atualizar = QPushButton("ðŸ”„ Atualizar CompÃªndio")        btn_atualizar.clicked.connect(self._carregar_compendio)        layout.addWidget(btn_atualizar)        self.setLayout(layout)        self._carregar_compendio()    def _carregar_compendio(self):        self.tabela_compendio.setRowCount(0)        tipo_filtro = self.combo_filtro.currentText().lower()        db_manager = DatabaseManager()        try:            dados = db_manager.get_historico(tipo_filtro)        except Exception as e:            self.tabela_compendio.setRowCount(1)            self.tabela_compendio.setItem(0, 0, QTableWidgetItem("Erro"))            self.tabela_compendio.setItem(0, 1, QTableWidgetItem("Erro"))            self.tabela_compendio.setItem(0, 2, QTableWidgetItem("Erro"))            self.tabela_compendio.setItem(0, 3, QTableWidgetItem("Erro a obter compÃªndio."))            self.tabela_compendio.setItem(0, 4, QTableWidgetItem(str(e)))            return        for row_idx, row_data in enumerate(dados):            self.tabela_compendio.insertRow(row_idx)            for col_idx, item in enumerate(row_data):                cell = QTableWidgetItem(str(item))                cell.setFlags(cell.flags() ^ Qt.ItemIsEditable)                self.tabela_compendio.setItem(row_idx, col_idx, cell)