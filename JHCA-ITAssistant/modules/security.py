from PyQt5.QtWidgets import QMainWindow, QWidget, QVBoxLayout, QLabelfrom PyQt5.QtGui import QFontimport sysimport socketimport platformimport randomimport telegramclass SecurityManager:    def __init__(self):        self.usuario_autenticado = False        self.chave_maquina = self.obter_chave_maquina()        self.maquinas_confiaveis = {            "LAPTOP-JHCA": "WIN11",            "JHCA-PC": "DESKTOP",            "Galaxy-S22": "TELEMOVEL"        }        self.bot_token = "7550630501:AAH16eFeMXb89PjQZILuUuMv8mT0MQE4so0"        self.user_id = 1051208100        self.bot = telegram.Bot(token=self.bot_token)        self.codigo_gerado = None    def obter_chave_maquina(self):        hostname = socket.gethostname()        sistema = platform.system()        return f"{hostname}-{sistema}"    def verificar_maquina_confiavel(self):        return any(host in self.chave_maquina for host in self.maquinas_confiaveis)    def verificar_localizacao(self):        # Placeholder para futura verificaÃ§Ã£o por IP ou GPS        return True    def enviar_codigo_telegram(self):        self.codigo_gerado = str(random.randint(100000, 999999))        mensagem = (            f"ðŸ” *Pedido de acesso ao Subdashboard*\n"            f"ðŸ“ MÃ¡quina: `{self.chave_maquina}`\n"            f"âœ… CÃ³digo de verificaÃ§Ã£o: *{self.codigo_gerado}*"        )        try:            self.bot.send_message(chat_id=self.user_id, text=mensagem, parse_mode=telegram.ParseMode.MARKDOWN)            print("[TELEGRAM] CÃ³digo enviado.")        except Exception as e:            print(f"[ERRO TELEGRAM] Falha no envio: {e}")    def autenticar_usuario(self, codigo_recebido):        if not self.verificar_maquina_confiavel():            print("[SEGURANÃ‡A] MÃ¡quina nÃ£o autorizada.")            return False        if not self.verificar_localizacao():            print("[SEGURANÃ‡A] LocalizaÃ§Ã£o invÃ¡lida.")            return False        if codigo_recebido == self.codigo_gerado:            print("[SEGURANÃ‡A] Acesso autorizado.")            self.usuario_autenticado = True            return True        print("[SEGURANÃ‡A] CÃ³digo invÃ¡lido.")        return False    def tem_permissao(self, nivel):        if nivel == "root":            return self.usuario_autenticado        return Trueclass MainWindow(QMainWindow):    def __init__(self):        super().__init__()        self.setWindowTitle("SeguranÃ§a")        self.setGeometry(200, 200, 400, 300)        self.init_ui()    def init_ui(self):        central = QWidget()        self.setCentralWidget(central)        layout = QVBoxLayout(central)        label = QLabel("ðŸ” MÃ³dulo de SeguranÃ§a")        label.setFont(QFont("Segoe UI", 14))        layout.addWidget(label)if __name__ == "__main__":    from PyQt5.QtWidgets import QApplication    app = QApplication(sys.argv)    window = MainWindow()    window.show()    sys.exit(app.exec_())