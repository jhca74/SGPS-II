# modules/web_tunel_server.py - Servidor web leve para controlo remoto via browserfrom flask import Flask, request, render_template_stringimport subprocessimport osapp = Flask(__name__)SENHA = "JHCApass"HTML_TEMPLATE = """<!doctype html><title>TÃºnel Remoto JHCA</title><h2>Controlo Remoto - TÃºnel Web</h2><form method=post>  Senha: <input type=password name=senha><br><br>  Comando: <input name=comando style="width:400px"><br><br>  <input type=submit value=Executar></form><pre>{{saida}}</pre>"""@app.route("/", methods=["GET", "POST"])def index():    saida = ""    if request.method == "POST":        senha = request.form.get("senha")        if senha != SENHA:            saida = "Acesso negado."        else:            comando = request.form.get("comando")            saida = executar_comando(comando)    return render_template_string(HTML_TEMPLATE, saida=saida)def executar_comando(cmd):    try:        if cmd.startswith("python "):            codigo = cmd[len("python "):]            local_vars = {}            exec(codigo, {}, local_vars)            return str(local_vars) if local_vars else "Executado."        elif cmd.startswith("pip install "):            pacote = cmd.split("pip install ", 1)[1]            subprocess.run(["pip", "install", pacote])            return f"Pacote '{pacote}' instalado."        elif cmd.startswith("start "):            app = cmd[len("start "):].strip()            subprocess.Popen(app, shell=True)            return f"Aplicativo '{app}' iniciado."        elif cmd.startswith("executar "):            ficheiro = cmd[len("executar "):].strip()            os.system(f"python {ficheiro}")            return f"Script {ficheiro} executado."        elif cmd.startswith("admin "):            comando = cmd[len("admin "):]            subprocess.run([                "powershell", "Start-Process", "cmd",                "-ArgumentList", f"/c {comando}",                "-Verb", "runAs"            ])            return f"'{comando}' enviado como administrador."        else:            return os.popen(cmd).read()    except Exception as e:        return f"Erro: {str(e)}"if __name__ == "__main__":    app.run(host="0.0.0.0", port=5050, debug=False)