import sysimport os# Adiciona o diretÃ³rio raiz ao sys.pathsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'menus')))sys.path.append(r"C:\Users\anjos\OneDrive\Desktop\JHCA TIA VIII\menus\diagnostics\diagnostico_dashboard")from menus.diagnostics.diagnostico_dashboard import main_dashboardfrom PyQt5.QtWidgets import (    QApplication, QMainWindow, QPushButton, QVBoxLayout, QWidget, QLabel, QGridLayout, QToolButton, QSizePolicy)from PyQt5.QtGui import QIconfrom PyQt5.QtCore import Qtfrom interface.chatbot_info import ChatbotInformativoimport osclass DashboardWindow(QMainWindow):    def __init__(self):        super().__init__()        self.setWindowTitle("JHCA TI Assistant")        self.setGeometry(100, 100, 1200, 800)        self.init_ui()    def init_ui(self):        central_widget = QWidget()        self.setCentralWidget(central_widget)        main_layout = QVBoxLayout()        grid = QGridLayout()        grid.setSpacing(20)        buttons = [            ("DiagnÃ³stico", self.abrir_diagnostico),            ("Limpeza", self.abrir_limpeza),            ("RecuperaÃ§Ã£o", self.abrir_recuperacao),            ("Dispositivos", self.abrir_dispositivos),            ("Mobile", self.abrir_mobile),            ("Rede", self.abrir_rede),            ("SeguranÃ§a", self.abrir_seguranca),            ("Linux", self.abrir_linux),            ("RelatÃ³rios", self.abrir_relatorios),            ("Sistema", self.abrir_sistema),        ]        for i, (label, slot) in enumerate(buttons):            layout = QVBoxLayout()            btn = QPushButton(label)            btn.setMinimumSize(200, 100)            btn.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)            btn.clicked.connect(slot)            info_btn = QToolButton()            info_btn.setIcon(QIcon.fromTheme("help-about"))            info_btn.setToolTip(f"InformaÃ§Ãµes sobre {label}")            info_btn.clicked.connect(lambda _, nome=label: self.abrir_chatbot_informativo(nome))            layout.addWidget(btn)            layout.addWidget(info_btn, alignment=Qt.AlignRight)            grid.addLayout(layout, i // 3, i % 3)        main_layout.addLayout(grid)        central_widget.setLayout(main_layout)    def abrir_diagnostico(self):        self.diagnostico_win = main_dashboard.DashboardDiagnostico()        self.diagnostico_win.exec_()    def abrir_limpeza(self):        pass    def abrir_recuperacao(self):        pass    def abrir_dispositivos(self):        pass    def abrir_mobile(self):        pass    def abrir_rede(self):        pass    def abrir_seguranca(self):        pass    def abrir_linux(self):        pass    def abrir_relatorios(self):        pass    def abrir_sistema(self):        pass    def abrir_chatbot_informativo(self, nome):         self.chatbot.exec_()if __name__ == "__main__":    app = QApplication(sys.argv)    window = DashboardWindow()    window.show()    sys.exit(app.exec_())