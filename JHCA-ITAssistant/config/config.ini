# config_loader.py - Carrega as configuraÃ§Ãµes globais do JHCA IT Assistantimport configparserimport osCONFIG_PATH = os.path.join(os.path.dirname(__file__), "config.ini")class Config:    def __init__(self):        self.parser = configparser.ConfigParser()        self.parser.read(CONFIG_PATH)        self.debug_mode = self.parser.getboolean("GERAL", "debug_mode", fallback=True)        self.superadmin_email = self.parser.get("SUPERADMIN", "email", fallback="info@jhca.pt")        self.default_scrape = self.parser.get("IA", "tema_inicial", fallback="inteligÃªncia artificial")        self.lang = self.parser.get("GERAL", "idioma", fallback="pt-PT")        self.telefone = self.parser.get("SUPERADMIN", "telemovel", fallback="+351938682030")        # Tokens        self.tokens = {            "openai": self.parser.get("TOKENS", "OPENAI", fallback=""),            "gemini": self.parser.get("TOKENS", "GEMINI", fallback=""),            "deepseek": self.parser.get("TOKENS", "DEEPSEEK", fallback=""),            "github": self.parser.get("TOKENS", "GITHUB", fallback=""),            "telegram_bot": self.parser.get("TOKENS", "TELEGRAM_BOT", fallback=""),        }    def get_token(self, nome):        return self.tokens.get(nome, "")# Uso:# from config_loader import Config# cfg = Config()# print(cfg.superadmin_email)