# === Submenu: RecuperaÃ§Ã£o de Ficheiros Android ===# === Submenu: RecuperaÃ§Ã£o de Ficheiros Android ===import subprocessfrom datetime import datetimefrom PyQt5.QtWidgets import QMessageBoxfrom modules.email_sender import send_email_reportimport jsonfrom pathlib import Pathdef recuperar_ficheiros_android(self):    self.result_text.clear()    self.result_text.append("ðŸ”„ RecuperaÃ§Ã£o de Ficheiros Android")    try:        self.result_text.append("ðŸ” A procurar ficheiros apagados ou corrompidos simulados...")        # SimulaÃ§Ã£o de ficheiros apagados (exemplo real pode envolver root + undelete)        output = subprocess.check_output(["adb", "shell", "ls", "/sdcard/"], text=True)        ficheiros = output.strip().split("\n")        encontrados = [f for f in ficheiros if any(ext in f.lower() for ext in ['.jpg', '.mp4', '.pdf', '.doc', '.zip'])]        if encontrados:            self.result_text.append("\nðŸ“ Ficheiros encontrados:")            for f in encontrados:                self.result_text.append(f" - {f}")        else:            self.result_text.append("âš ï¸ Nenhum ficheiro relevante encontrado.")        # SugestÃµes baseadas na tua lista        sugestoes = [            "âœ… SugestÃ£o: Usar PhotoRec para recuperaÃ§Ã£o profunda de cartÃµes SD.",            "âœ… SugestÃ£o: Usar DiskDigger diretamente no Android para fotos apagadas.",            "âœ… SugestÃ£o: TestDisk pode recuperar partiÃ§Ãµes apagadas no armazenamento interno."        ]        self.result_text.append("\nðŸ’¡ SugestÃµes:")        for s in sugestoes:            self.result_text.append(s)        # Exportar relatÃ³rio        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")        relatorio_path = f"recuperacao_android_{now}.txt"        with open(relatorio_path, "w", encoding="utf-8") as f:            f.write(self.result_text.toPlainText())        send_email_report(            assunto="RelatÃ³rio de RecuperaÃ§Ã£o Android",            corpo="Segue em anexo o relatÃ³rio com ficheiros encontrados e sugestÃµes de recuperaÃ§Ã£o.",            anexo_path=relatorio_path        )        self.result_text.append("ðŸ“¤ RelatÃ³rio enviado por email com sucesso!")        # Metadata de mÃ³dulo        metadata = {            "submodulo": "recuperacao_android",            "status": "executado",            "fichas_encontrados": encontrados,            "sugestoes_geradas": sugestoes        }        Path("txt").mkdir(parents=True, exist_ok=True)        with open("txt/recuperacao_metadata.json", "w", encoding="utf-8") as f:            json.dump(metadata, f, indent=4)    except Exception as e:        QMessageBox.warning(None, "Erro", f"Falha ao procurar ficheiros: {e}")        self.result_text.append(f"âŒ Erro: {e}")