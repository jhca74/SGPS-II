import subprocessfrom PyQt5.QtWidgets import QWidget, QVBoxLayout, QPushButton, QTextEditclass DiagnosticoAndroid(QWidget):    def __init__(self):        super().__init__()        self.setWindowTitle("DiagnÃ³stico Android")        layout = QVBoxLayout()        self.output = QTextEdit()        self.output.setReadOnly(True)        layout.addWidget(self.output)        btn_meminfo = QPushButton("Ver Uso de MemÃ³ria")        btn_meminfo.clicked.connect(self.mostrar_meminfo)        layout.addWidget(btn_meminfo)        btn_armazenamento = QPushButton("Ver Armazenamento")        btn_armazenamento.clicked.connect(self.mostrar_armazenamento)        layout.addWidget(btn_armazenamento)        btn_info_sistema = QPushButton("Info do Sistema Android")        btn_info_sistema.clicked.connect(self.mostrar_info_android)        layout.addWidget(btn_info_sistema)        self.setLayout(layout)    def mostrar_meminfo(self):        try:            resultado = subprocess.check_output(["adb", "shell", "dumpsys", "meminfo"], text=True)        except Exception as e:            resultado = f"Erro ao obter meminfo: {e}"        self.output.setText(resultado)    def mostrar_armazenamento(self):        try:            resultado = subprocess.check_output(["adb", "shell", "df"], text=True)        except Exception as e:            resultado = f"Erro ao obter armazenamento: {e}"        self.output.setText(resultado)    def mostrar_info_android(self):        try:            resultado = subprocess.check_output(["adb", "shell", "getprop"], text=True)        except Exception as e:            resultado = f"Erro ao obter propriedades do sistema: {e}"        self.output.setText(resultado)