# === Submenu: OtimizaÃ§Ã£o iOS ===# === Submenu: OtimizaÃ§Ã£o iOS ===from datetime import datetimefrom PyQt5.QtWidgets import QMessageBoxfrom modules.email_sender import send_email_reportimport jsonfrom pathlib import Pathdef otimizacao_ios(self):    self.result_text.clear()    self.result_text.append("ðŸ§¹ OtimizaÃ§Ã£o do Sistema iOS")    try:        self.result_text.append("âš ï¸ Por limitaÃ§Ãµes do sistema iOS, a maioria das aÃ§Ãµes requer jailbreak.")        self.result_text.append("SerÃ¡ apresentada uma lista de ferramentas Ãºteis para otimizaÃ§Ã£o.\n")")"        sugestoes = [            "âœ… iCleaner: Remove ficheiros temporÃ¡rios e caches (requer jailbreak).",            "âœ… CacheCleaner: Remove caches de apps de forma segura (requer jailbreak).",            "âœ… CleanMyPhone: Limpa ficheiros inÃºteis em iPhones com root.",            "âœ… iOS-Optimizer: Liberta memÃ³ria e otimiza performance (GitHub).",            "âœ… CocoaTop: Monitoriza uso de recursos (RAM, CPU). Jailbreak necessÃ¡rio."        ]        self.result_text.append("ðŸ’¡ SugestÃµes de OtimizaÃ§Ã£o:")        for s in sugestoes:            self.result_text.append(s)        # Exportar relatÃ³rio        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")        relatorio_path = f"otimizacao_ios_{now}.txt"        with open(relatorio_path, "w", encoding="utf-8") as f:            f.write(self.result_text.toPlainText())        send_email_report(            assunto="RelatÃ³rio de OtimizaÃ§Ã£o iOS",            corpo="Segue o relatÃ³rio com sugestÃµes de otimizaÃ§Ã£o para iOS.",            anexo_path=relatorio_path        )        self.result_text.append("ðŸ“¤ RelatÃ³rio enviado por email com sucesso!")        metadata = {            "submodulo": "otimizacao_ios",            "status": "executado",            "sugestoes_geradas": sugestoes        }        Path("txt").mkdir(parents=True, exist_ok=True)        with open("txt/otimizacao_ios_metadata.json", "w", encoding="utf-8") as f:            json.dump(metadata, f, indent=4)    except Exception as e:        QMessageBox.warning(None, "Erro", f"Falha ao gerar sugestÃµes: {e}")        self.result_text.append(f"âŒ Erro: {e}")