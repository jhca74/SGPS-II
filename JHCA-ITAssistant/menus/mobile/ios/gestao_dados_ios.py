# === Submenu: GestÃ£o de Dados iOS ===# === Submenu: GestÃ£o de Dados iOS ===from datetime import datetimefrom PyQt5.QtWidgets import QMessageBoxfrom modules.email_sender import send_email_reportimport jsonfrom pathlib import Pathdef gestao_dados_ios(self):    self.result_text.clear()    self.result_text.append("ðŸ—ƒ GestÃ£o de Dados iOS")    try:        self.result_text.append("ðŸ“¦ Devido a restriÃ§Ãµes da Apple, a gestÃ£o direta requer ferramentas externas ou jailbreak.")        self.result_text.append("Abaixo estÃ£o sugestÃµes funcionais com ou sem jailbreak.\n")        sugestoes = [            "âœ… AltStore: Permite instalar e gerir apps fora da App Store (sem jailbreak).",            "âœ… ifuse: Monta o sistema de ficheiros do iPhone no PC (requer libimobiledevice).",            "âœ… libimobiledevice-backup: Cria e restaura backups locais do iPhone via linha de comandos.",            "âœ… usbmuxd: Gere comunicaÃ§Ã£o USB entre iPhone e PC.",            "âœ… ios-file-manager: Interface para explorar ficheiros no iOS (com ou sem root)."        ]        self.result_text.append("ðŸ’¡ SugestÃµes de GestÃ£o:")        for s in sugestoes:            self.result_text.append(s)        # Exportar relatÃ³rio        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")        relatorio_path = f"gestao_dados_ios_{now}.txt"        with open(relatorio_path, "w", encoding="utf-8") as f:            f.write(self.result_text.toPlainText())        send_email_report(            assunto="RelatÃ³rio de GestÃ£o de Dados iOS",            corpo="Segue o relatÃ³rio com ferramentas Ãºteis para gestÃ£o de dados em iOS.",            anexo_path=relatorio_path        )        self.result_text.append("ðŸ“¤ RelatÃ³rio enviado por email com sucesso!")        metadata = {            "submodulo": "gestao_dados_ios",            "status": "executado",            "sugestoes_geradas": sugestoes        }        Path("txt").mkdir(parents=True, exist_ok=True)        with open("txt/gestao_dados_ios_metadata.json", "w", encoding="utf-8") as f:            json.dump(metadata, f, indent=4)    except Exception as e:        QMessageBox.warning(None, "Erro", f"Falha ao gerar sugestÃµes: {e}")        self.result_text.append(f"âŒ Erro: {e}")