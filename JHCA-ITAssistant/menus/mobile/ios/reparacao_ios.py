# === Submenu: ReparaÃ§Ã£o iOS ===# === Submenu: ReparaÃ§Ã£o iOS ===import subprocessfrom datetime import datetimefrom PyQt5.QtWidgets import QMessageBoxfrom modules.email_sender import send_email_reportimport jsonfrom pathlib import Pathdef reparacao_ios(self):    self.result_text.clear()    self.result_text.append("ðŸ›  ReparaÃ§Ã£o de Sistema iOS")    try:        # Verificar estado do dispositivo com ideviceinfo        info = subprocess.check_output(["ideviceinfo"], text=True, timeout=10)        linhas = info.strip().splitlines()        modo = "desconhecido"        sugestoes = []        for linha in linhas:            if "RecoveryMode" in linha and "true" in linha:                modo = "recovery"            elif "DFU" in linha:                modo = "dfu"            elif "ProductType" in linha:                modo = "normal"        self.result_text.append(f"ðŸ“± Modo detetado: {modo.upper()}")        if modo == "recovery":            sugestoes.append("âœ… Use RecBoot para sair do modo Recovery.")            sugestoes.append("âœ… Verifique firmware com iTunes ou TinyUmbrella.")        elif modo == "dfu":            sugestoes.append("âœ… Utilize checkra1n ou redsn0w para recuperar o sistema.")        elif modo == "normal":            sugestoes.append("âœ… Dispositivo ativo. Se hÃ¡ problemas, verifique logs com ios-diagnostics.")        else:            sugestoes.append("âš ï¸ Modo nÃ£o detetado. Tente reconectar ou verificar cabo.")        self.result_text.append("\nðŸ’¡ SugestÃµes de ReparaÃ§Ã£o:")        for s in sugestoes:            self.result_text.append(s)        # Exportar relatÃ³rio        now = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")        relatorio_path = f"reparacao_ios_{now}.txt"        with open(relatorio_path, "w", encoding="utf-8") as f:            f.write(self.result_text.toPlainText())        send_email_report(            assunto="ReparaÃ§Ã£o iOS",            corpo="Segue o relatÃ³rio de estado e sugestÃµes de recuperaÃ§Ã£o.",            anexo_path=relatorio_path        )        self.result_text.append("ðŸ“¤ RelatÃ³rio enviado por email com sucesso!")        # Metadata        metadata = {            "submodulo": "reparacao_ios",            "status": "executado",            "modo_deteccao": modo,            "sugestoes_geradas": sugestoes        }        Path("txt").mkdir(parents=True, exist_ok=True)        with open("txt/reparacao_ios_metadata.json", "w", encoding="utf-8") as f:            json.dump(metadata, f, indent=4)    except Exception as e:        QMessageBox.warning(None, "Erro", f"Falha ao verificar estado iOS: {e}")        self.result_text.append(f"âŒ Erro: {e}")