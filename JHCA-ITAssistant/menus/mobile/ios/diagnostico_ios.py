import subprocessfrom PyQt5.QtWidgets import QWidget, QVBoxLayout, QPushButton, QTextEditclass DiagnosticoIOS(QWidget):    def __init__(self):        super().__init__()        self.setWindowTitle("DiagnÃ³stico iOS")        layout = QVBoxLayout()        self.output = QTextEdit()        self.output.setReadOnly(True)        layout.addWidget(self.output)        btn_info = QPushButton("Obter InformaÃ§Ãµes do Dispositivo")        btn_info.clicked.connect(self.obter_info_ios)        layout.addWidget(btn_info)        btn_lista_apps = QPushButton("Listar AplicaÃ§Ãµes Instaladas")        btn_lista_apps.clicked.connect(self.listar_apps_ios)        layout.addWidget(btn_lista_apps)        btn_backup = QPushButton("Listar Backups DisponÃ­veis")        btn_backup.clicked.connect(self.listar_backups_ios)        layout.addWidget(btn_backup)        self.setLayout(layout)    def obter_info_ios(self):        try:            udid = subprocess.check_output(["idevice_id", "-l"], text=True).strip()            resultado = subprocess.check_output(["ideviceinfo", "-u", udid], text=True)        except Exception as e:            resultado = f"Erro ao obter informaÃ§Ãµes do dispositivo iOS: {e}"        self.output.setText(resultado)    def listar_apps_ios(self):        try:            udid = subprocess.check_output(["idevice_id", "-l"], text=True).strip()            resultado = subprocess.check_output(["ideviceinstaller", "-u", udid, "-l"], text=True)        except Exception as e:            resultado = f"Erro ao listar aplicaÃ§Ãµes: {e}"        self.output.setText(resultado)    def listar_backups_ios(self):        try:            resultado = subprocess.check_output(["idevicebackup2", "list"], text=True)        except Exception as e:            resultado = f"Erro ao listar backups: {e}"        self.output.setText(resultado)